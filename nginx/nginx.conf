events {
    worker_connections 1024;
}

http {
    # Redirect all HTTP traffic to HTTPS
    server {
        listen 80;
        server_name workflowguard.pro www.workflowguard.pro api.workflowguard.pro;
        return 301 https://$host$request_uri;
    }

    # API Server for api.workflowguard.pro
    server {
        listen 443 ssl;
        server_name api.workflowguard.pro;

        # SSL Certificate paths (shared certificate from Certbot)
        ssl_certificate /etc/letsencrypt/live/workflowguard.pro/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/workflowguard.pro/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location /api/ {
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://www.workflowguard.pro' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            proxy_pass http://backend:4000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Origin $http_origin;
            
            # Add CORS headers for all responses
            add_header 'Access-Control-Allow-Origin' 'https://www.workflowguard.pro' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;
        }
    }

    # Frontend Server for workflowguard.pro
    server {
        listen 443 ssl;
        server_name workflowguard.pro www.workflowguard.pro;

        # SSL Certificate paths (to be generated by Certbot)
        ssl_certificate /etc/letsencrypt/live/workflowguard.pro/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/workflowguard.pro/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            proxy_pass http://frontend:80; # The frontend container serves on port 80 internally
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}