
> backend@0.0.1 test
> jest src/workflow/workflow.controller.spec.ts

node.exe : FAIL src/workflow/workflow.controller.spec.ts
At line:1 char:1
+ & "C:\Program Files\nodejs/node.exe" "C:\Program Files\nodejs/node_mo ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (FAIL src/workfl...troller.spe    c.ts:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
 
  WorkflowController
    ├ù should be defined (15 ms)
    findAll
      ├ù should return an array of workflows (3 ms)
    getHubSpotWorkflows
      ├ù should return workflows from HubSpot (4 ms)
    findOne
      ├ù should return a single workflow (4 ms)
    findByHubspotId
      ├ù should return a workflow by hubspot id (2 ms)
    startWorkflowProtection
      ├ù should start protection for workflows (1 ms)
    syncHubSpotWorkflows
      ├ù should sync workflows from HubSpot (2 ms)
    getProtectedWorkflows
      ├ù should return protected workflows (2 ms)
    getWorkflowStats
      ├ù should return workflow stats (4 ms)
    create
      ├ù should create a workflow (1 ms)
    update
      ├ù should update a workflow (1 ms)
    remove
      ├ù should remove a workflow (2 ms)
    Delegated Methods
      ├ù should call restoreWorkflowVersion (1 ms)
      ├ù should call rollbackWorkflow (1 ms)
      ├ù should call downloadWorkflowVersion (1 ms)

  ΓùÅ WorkflowController ΓÇ║ should be defined

    Nest can't resolve dependencies of the TrialGuard (?). Please make sure that the argument SubscriptionService at index [0] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If SubscriptionService is a provider, is it part of the current RootTestModule?
    - If SubscriptionService is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing SubscriptionService */ ]
      })

    [0m [90m 29 |[39m
     [90m 30 |[39m   beforeEach([36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 32 |[39m       controllers[33m:[39m [[33mWorkflowController[39m][33m,[39m
     [90m 33 |[39m       providers[33m:[39m [
     [90m 34 |[39m         {[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:262:19)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/core/injector/injector.js:215:33)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:129:38)
          at async Promise.all (index 0)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:144:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:70:13)
      at TestingInjector.loadInjectable (../node_modules/@nestjs/core/injector/injector.js:94:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:80:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstancesOfInjectables (../node_modules/@nestjs/core/injector/instance-loader.js:79:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:41:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (workflow/workflow.controller.spec.ts:31:35)

  ΓùÅ WorkflowController ΓÇ║ findAll ΓÇ║ should return an array of workflows

    Nest can't resolve dependencies of the TrialGuard (?). Please make sure that the argument SubscriptionService at index [0] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If SubscriptionService is a provider, is it part of the current RootTestModule?
    - If SubscriptionService is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing SubscriptionService */ ]
      })

    [0m [90m 29 |[39m
     [90m 30 |[39m   beforeEach([36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 32 |[39m       controllers[33m:[39m [[33mWorkflowController[39m][33m,[39m
     [90m 33 |[39m       providers[33m:[39m [
     [90m 34 |[39m         {[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:262:19)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/core/injector/injector.js:215:33)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:129:38)
          at async Promise.all (index 0)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:144:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:70:13)
      at TestingInjector.loadInjectable (../node_modules/@nestjs/core/injector/injector.js:94:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:80:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstancesOfInjectables (../node_modules/@nestjs/core/injector/instance-loader.js:79:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:41:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (workflow/workflow.controller.spec.ts:31:35)

  ΓùÅ WorkflowController ΓÇ║ getHubSpotWorkflows ΓÇ║ should return workflows from HubSpot

    Nest can't resolve dependencies of the TrialGuard (?). Please make sure that the argument SubscriptionService at index [0] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If SubscriptionService is a provider, is it part of the current RootTestModule?
    - If SubscriptionService is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing SubscriptionService */ ]
      })

    [0m [90m 29 |[39m
     [90m 30 |[39m   beforeEach([36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 32 |[39m       controllers[33m:[39m [[33mWorkflowController[39m][33m,[39m
     [90m 33 |[39m       providers[33m:[39m [
     [90m 34 |[39m         {[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:262:19)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/core/injector/injector.js:215:33)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:129:38)
          at async Promise.all (index 0)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:144:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:70:13)
      at TestingInjector.loadInjectable (../node_modules/@nestjs/core/injector/injector.js:94:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:80:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstancesOfInjectables (../node_modules/@nestjs/core/injector/instance-loader.js:79:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:41:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (workflow/workflow.controller.spec.ts:31:35)

  ΓùÅ WorkflowController ΓÇ║ findOne ΓÇ║ should return a single workflow

    Nest can't resolve dependencies of the TrialGuard (?). Please make sure that the argument SubscriptionService at index [0] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If SubscriptionService is a provider, is it part of the current RootTestModule?
    - If SubscriptionService is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing SubscriptionService */ ]
      })

    [0m [90m 29 |[39m
     [90m 30 |[39m   beforeEach([36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 32 |[39m       controllers[33m:[39m [[33mWorkflowController[39m][33m,[39m
     [90m 33 |[39m       providers[33m:[39m [
     [90m 34 |[39m         {[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:262:19)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/core/injector/injector.js:215:33)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:129:38)
          at async Promise.all (index 0)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:144:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:70:13)
      at TestingInjector.loadInjectable (../node_modules/@nestjs/core/injector/injector.js:94:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:80:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstancesOfInjectables (../node_modules/@nestjs/core/injector/instance-loader.js:79:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:41:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (workflow/workflow.controller.spec.ts:31:35)

  ΓùÅ WorkflowController ΓÇ║ findByHubspotId ΓÇ║ should return a workflow by hubspot id

    Nest can't resolve dependencies of the TrialGuard (?). Please make sure that the argument SubscriptionService at index [0] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If SubscriptionService is a provider, is it part of the current RootTestModule?
    - If SubscriptionService is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing SubscriptionService */ ]
      })

    [0m [90m 29 |[39m
     [90m 30 |[39m   beforeEach([36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 32 |[39m       controllers[33m:[39m [[33mWorkflowController[39m][33m,[39m
     [90m 33 |[39m       providers[33m:[39m [
     [90m 34 |[39m         {[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:262:19)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/core/injector/injector.js:215:33)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:129:38)
          at async Promise.all (index 0)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:144:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:70:13)
      at TestingInjector.loadInjectable (../node_modules/@nestjs/core/injector/injector.js:94:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:80:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstancesOfInjectables (../node_modules/@nestjs/core/injector/instance-loader.js:79:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:41:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (workflow/workflow.controller.spec.ts:31:35)

  ΓùÅ WorkflowController ΓÇ║ startWorkflowProtection ΓÇ║ should start protection for workflows

    Nest can't resolve dependencies of the TrialGuard (?). Please make sure that the argument SubscriptionService at index [0] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If SubscriptionService is a provider, is it part of the current RootTestModule?
    - If SubscriptionService is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing SubscriptionService */ ]
      })

    [0m [90m 29 |[39m
     [90m 30 |[39m   beforeEach([36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 32 |[39m       controllers[33m:[39m [[33mWorkflowController[39m][33m,[39m
     [90m 33 |[39m       providers[33m:[39m [
     [90m 34 |[39m         {[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:262:19)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/core/injector/injector.js:215:33)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:129:38)
          at async Promise.all (index 0)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:144:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:70:13)
      at TestingInjector.loadInjectable (../node_modules/@nestjs/core/injector/injector.js:94:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:80:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstancesOfInjectables (../node_modules/@nestjs/core/injector/instance-loader.js:79:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:41:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (workflow/workflow.controller.spec.ts:31:35)

  ΓùÅ WorkflowController ΓÇ║ syncHubSpotWorkflows ΓÇ║ should sync workflows from HubSpot

    Nest can't resolve dependencies of the TrialGuard (?). Please make sure that the argument SubscriptionService at index [0] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If SubscriptionService is a provider, is it part of the current RootTestModule?
    - If SubscriptionService is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing SubscriptionService */ ]
      })

    [0m [90m 29 |[39m
     [90m 30 |[39m   beforeEach([36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 32 |[39m       controllers[33m:[39m [[33mWorkflowController[39m][33m,[39m
     [90m 33 |[39m       providers[33m:[39m [
     [90m 34 |[39m         {[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:262:19)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/core/injector/injector.js:215:33)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:129:38)
          at async Promise.all (index 0)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:144:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:70:13)
      at TestingInjector.loadInjectable (../node_modules/@nestjs/core/injector/injector.js:94:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:80:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstancesOfInjectables (../node_modules/@nestjs/core/injector/instance-loader.js:79:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:41:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (workflow/workflow.controller.spec.ts:31:35)

  ΓùÅ WorkflowController ΓÇ║ getProtectedWorkflows ΓÇ║ should return protected workflows

    Nest can't resolve dependencies of the TrialGuard (?). Please make sure that the argument SubscriptionService at index [0] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If SubscriptionService is a provider, is it part of the current RootTestModule?
    - If SubscriptionService is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing SubscriptionService */ ]
      })

    [0m [90m 29 |[39m
     [90m 30 |[39m   beforeEach([36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 32 |[39m       controllers[33m:[39m [[33mWorkflowController[39m][33m,[39m
     [90m 33 |[39m       providers[33m:[39m [
     [90m 34 |[39m         {[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:262:19)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/core/injector/injector.js:215:33)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:129:38)
          at async Promise.all (index 0)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:144:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:70:13)
      at TestingInjector.loadInjectable (../node_modules/@nestjs/core/injector/injector.js:94:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:80:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstancesOfInjectables (../node_modules/@nestjs/core/injector/instance-loader.js:79:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:41:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (workflow/workflow.controller.spec.ts:31:35)

  ΓùÅ WorkflowController ΓÇ║ getWorkflowStats ΓÇ║ should return workflow stats

    Nest can't resolve dependencies of the TrialGuard (?). Please make sure that the argument SubscriptionService at index [0] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If SubscriptionService is a provider, is it part of the current RootTestModule?
    - If SubscriptionService is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing SubscriptionService */ ]
      })

    [0m [90m 29 |[39m
     [90m 30 |[39m   beforeEach([36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 32 |[39m       controllers[33m:[39m [[33mWorkflowController[39m][33m,[39m
     [90m 33 |[39m       providers[33m:[39m [
     [90m 34 |[39m         {[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:262:19)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/core/injector/injector.js:215:33)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:129:38)
          at async Promise.all (index 0)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:144:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:70:13)
      at TestingInjector.loadInjectable (../node_modules/@nestjs/core/injector/injector.js:94:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:80:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstancesOfInjectables (../node_modules/@nestjs/core/injector/instance-loader.js:79:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:41:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (workflow/workflow.controller.spec.ts:31:35)

  ΓùÅ WorkflowController ΓÇ║ create ΓÇ║ should create a workflow

    Nest can't resolve dependencies of the TrialGuard (?). Please make sure that the argument SubscriptionService at index [0] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If SubscriptionService is a provider, is it part of the current RootTestModule?
    - If SubscriptionService is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing SubscriptionService */ ]
      })

    [0m [90m 29 |[39m
     [90m 30 |[39m   beforeEach([36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 32 |[39m       controllers[33m:[39m [[33mWorkflowController[39m][33m,[39m
     [90m 33 |[39m       providers[33m:[39m [
     [90m 34 |[39m         {[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:262:19)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/core/injector/injector.js:215:33)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:129:38)
          at async Promise.all (index 0)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:144:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:70:13)
      at TestingInjector.loadInjectable (../node_modules/@nestjs/core/injector/injector.js:94:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:80:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstancesOfInjectables (../node_modules/@nestjs/core/injector/instance-loader.js:79:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:41:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (workflow/workflow.controller.spec.ts:31:35)

  ΓùÅ WorkflowController ΓÇ║ update ΓÇ║ should update a workflow

    Nest can't resolve dependencies of the TrialGuard (?). Please make sure that the argument SubscriptionService at index [0] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If SubscriptionService is a provider, is it part of the current RootTestModule?
    - If SubscriptionService is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing SubscriptionService */ ]
      })

    [0m [90m 29 |[39m
     [90m 30 |[39m   beforeEach([36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 32 |[39m       controllers[33m:[39m [[33mWorkflowController[39m][33m,[39m
     [90m 33 |[39m       providers[33m:[39m [
     [90m 34 |[39m         {[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:262:19)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/core/injector/injector.js:215:33)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:129:38)
          at async Promise.all (index 0)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:144:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:70:13)
      at TestingInjector.loadInjectable (../node_modules/@nestjs/core/injector/injector.js:94:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:80:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstancesOfInjectables (../node_modules/@nestjs/core/injector/instance-loader.js:79:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:41:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (workflow/workflow.controller.spec.ts:31:35)

  ΓùÅ WorkflowController ΓÇ║ remove ΓÇ║ should remove a workflow

    Nest can't resolve dependencies of the TrialGuard (?). Please make sure that the argument SubscriptionService at index [0] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If SubscriptionService is a provider, is it part of the current RootTestModule?
    - If SubscriptionService is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing SubscriptionService */ ]
      })

    [0m [90m 29 |[39m
     [90m 30 |[39m   beforeEach([36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 32 |[39m       controllers[33m:[39m [[33mWorkflowController[39m][33m,[39m
     [90m 33 |[39m       providers[33m:[39m [
     [90m 34 |[39m         {[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:262:19)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/core/injector/injector.js:215:33)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:129:38)
          at async Promise.all (index 0)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:144:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:70:13)
      at TestingInjector.loadInjectable (../node_modules/@nestjs/core/injector/injector.js:94:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:80:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstancesOfInjectables (../node_modules/@nestjs/core/injector/instance-loader.js:79:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:41:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (workflow/workflow.controller.spec.ts:31:35)

  ΓùÅ WorkflowController ΓÇ║ Delegated Methods ΓÇ║ should call restoreWorkflowVersion

    Nest can't resolve dependencies of the TrialGuard (?). Please make sure that the argument SubscriptionService at index [0] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If SubscriptionService is a provider, is it part of the current RootTestModule?
    - If SubscriptionService is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing SubscriptionService */ ]
      })

    [0m [90m 29 |[39m
     [90m 30 |[39m   beforeEach([36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 32 |[39m       controllers[33m:[39m [[33mWorkflowController[39m][33m,[39m
     [90m 33 |[39m       providers[33m:[39m [
     [90m 34 |[39m         {[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:262:19)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/core/injector/injector.js:215:33)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:129:38)
          at async Promise.all (index 0)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:144:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:70:13)
      at TestingInjector.loadInjectable (../node_modules/@nestjs/core/injector/injector.js:94:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:80:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstancesOfInjectables (../node_modules/@nestjs/core/injector/instance-loader.js:79:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:41:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (workflow/workflow.controller.spec.ts:31:35)

  ΓùÅ WorkflowController ΓÇ║ Delegated Methods ΓÇ║ should call rollbackWorkflow

    Nest can't resolve dependencies of the TrialGuard (?). Please make sure that the argument SubscriptionService at index [0] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If SubscriptionService is a provider, is it part of the current RootTestModule?
    - If SubscriptionService is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing SubscriptionService */ ]
      })

    [0m [90m 29 |[39m
     [90m 30 |[39m   beforeEach([36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 32 |[39m       controllers[33m:[39m [[33mWorkflowController[39m][33m,[39m
     [90m 33 |[39m       providers[33m:[39m [
     [90m 34 |[39m         {[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:262:19)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/core/injector/injector.js:215:33)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:129:38)
          at async Promise.all (index 0)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:144:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:70:13)
      at TestingInjector.loadInjectable (../node_modules/@nestjs/core/injector/injector.js:94:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:80:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstancesOfInjectables (../node_modules/@nestjs/core/injector/instance-loader.js:79:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:41:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (workflow/workflow.controller.spec.ts:31:35)

  ΓùÅ WorkflowController ΓÇ║ Delegated Methods ΓÇ║ should call downloadWorkflowVersion

    Nest can't resolve dependencies of the TrialGuard (?). Please make sure that the argument SubscriptionService at index [0] is available in the RootTestModule context.

    Potential solutions:
    - Is RootTestModule a valid NestJS module?
    - If SubscriptionService is a provider, is it part of the current RootTestModule?
    - If SubscriptionService is exported from a separate @Module, is that module imported within RootTestModule?
      @Module({
        imports: [ /* the Module containing SubscriptionService */ ]
      })

    [0m [90m 29 |[39m
     [90m 30 |[39m   beforeEach([36masync[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 31 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
     [90m    |[39m                                   [31m[1m^[22m[39m
     [90m 32 |[39m       controllers[33m:[39m [[33mWorkflowController[39m][33m,[39m
     [90m 33 |[39m       providers[33m:[39m [
     [90m 34 |[39m         {[0m

      at TestingInjector.lookupComponentInParentModules (../node_modules/@nestjs/core/injector/injector.js:262:19)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/core/injector/injector.js:215:33)
      at TestingInjector.resolveComponentInstance (../node_modules/@nestjs/testing/testing-injector.js:19:45)
      at resolveParam (../node_modules/@nestjs/core/injector/injector.js:129:38)
          at async Promise.all (index 0)
      at TestingInjector.resolveConstructorParams (../node_modules/@nestjs/core/injector/injector.js:144:27)
      at TestingInjector.loadInstance (../node_modules/@nestjs/core/injector/injector.js:70:13)
      at TestingInjector.loadInjectable (../node_modules/@nestjs/core/injector/injector.js:94:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:80:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstancesOfInjectables (../node_modules/@nestjs/core/injector/instance-loader.js:79:9)
      at ../node_modules/@nestjs/core/injector/instance-loader.js:41:13
          at async Promise.all (index 1)
      at TestingInstanceLoader.createInstances (../node_modules/@nestjs/core/injector/instance-loader.js:39:9)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/core/injector/instance-loader.js:22:13)
      at TestingInstanceLoader.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
      at TestingModuleBuilder.createInstancesOfDependencies (../node_modules/@nestjs/testing/testing-module.builder.js:118:9)
      at TestingModuleBuilder.compile (../node_modules/@nestjs/testing/testing-module.builder.js:74:9)
      at Object.<anonymous> (workflow/workflow.controller.spec.ts:31:35)

Test Suites: 1 failed, 1 total
Tests:       15 failed, 15 total
Snapshots:   0 total
Time:        4.809 s, estimated 5 s
Ran all test suites matching /src\\workflow\\workflow.controller.spec.ts/i.
